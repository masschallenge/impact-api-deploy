sudo: required
language: python
services:
  - docker
env:
    DOCKER_COMPOSE_VERSION: 1.10.1
before_install:
- cat ~/.ssh/config
- openssl aes-256-cbc -K $encrypted_254fbb7fb5b5_key -iv $encrypted_254fbb7fb5b5_iv
  -in deploy_key.enc -out ~/.ssh/id_rsa -d
- chmod 600 ~/.ssh/id_rsa*
- eval `ssh-agent -s`
- ssh-add ~/.ssh/id_rsa
- sudo apt-add-repository 'deb http://archive.ubuntu.com/ubuntu trusty-backports universe'
- sudo apt-get update -qq
- docker-compose --version
- sudo apt-get update
- sudo apt-get install -o Dpkg::Options::="--force-confold" --force-yes -y docker-engine
- sudo rm /usr/local/bin/docker-compose
- curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
- chmod +x docker-compose
- sudo mv docker-compose /usr/local/bin
- docker-compose --version
before_script:
- git clone git@github.com:masschallenge/impact-api.git
- cd impact-api
- git checkout AC-4034
- echo "" >> docker-env
- echo "DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}" >> docker-env
- echo "DATABASE_URL=mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}/${DATABASE_NAME}" >> docker-env
- echo "" >> docker-env
- cat docker-env
- docker-compose build --no-cache
- docker-compose up -d 
script:
- make test
after_success:
- export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
- export DEPLOY_ENVIRONMENT=$(if [ "$BRANCH" == "master" ]; then echo "production"; else echo "test"; fi)
- sudo curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest;
- sudo chmod +x /usr/local/bin/ecs-cli;
- pip install awscli;
- export PATH=$PATH:$HOME/.local/bin;
- eval $(aws ecr get-login --region us-east-1);
- make deploy AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY ENVIRONMENT=$DEPLOY_ENVIRONMENT DOCKER_REGISTRY=$DOCKER_REGISTRY